name: Open PR

on:
  workflow_dispatch:
    inputs:
      advisory:
        required: true
        description: Advisory ID, or URL (e.g. GHSA-123, or https://github.com/advisories/GHSA-123)
      issue:
        required: true
        description: Issue URL (e.g. https://github.com/brave/brave-browser/issues/1)
      comment:
        required: false
        description: Comment (optional)

env:
  DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  open-pr:
    name: 
    runs-on: ubuntu-latest
    env:
      advisory: ${{ inputs.advisory }}
      issue: ${{ inputs.issue }}
      comment: ${{ inputs.comment }}
    steps:
      - name: checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          ref: ${{ github.event.repository.default_branch }}
      - name: open pr
        run: |
          # Fail fast
          set -xeEo pipefail
          shopt -s inherit_errexit

          to_json() { printf "%s" "$*"|jq -Rsa .; }

          case "${advisory:?}" in
              https://github.com/advisories/GHSA-*|GHSA-*)
                  ty=npm; advisory_domain=github.com;;
              https://rustsec.org/advisories/RUSTSEC-*|RUSTSEC-*)
                  ty=cargo; advisory_domain=rustsec.org;;
              *) echo "ERROR: invalid advisory format" >&2; exit 2;;
          esac

          advisory_id="${advisory##*/}"
          advisory_url="https://${advisory_domain:?}/advisories/${advisory_id:?}"
          advisory_json='"advisory": '"$(to_json "${advisory_url:?}")"

          case "${issue:?}" in
              https://github.com/brave/*/issues/*|[0-9]*)
                  issue_id="${issue##*/}"
                  issue_url="${issue%/[0-9]*}/${issue_id:?}"
                  issue_json='"issue": '"$(to_json "${issue_url:?}")"
                  ;;
              *) echo "ERROR: invalid issue format" >&2; exit 2;;
          esac

          case "$(tr -d '[:space:]' <<<"$comment")" in
              "") ;;
              *) comment_json=', "comment": '"$(to_json "$comment")";;
          esac

          json="{ ${advisory_json:?}, ${issue_json:?} $comment_json }"

          # Update config.json
          echo "$(jq -r ".ignore.${ty:?} += [${json:?}]" config.json)" >config.json

          # Create a branch with the updated config.json and a PR based on it
          branch="ignore-$advisory_id"
          sha="$(gh api "/repos/${GITHUB_REPOSITORY:?}/git/refs/heads/${DEFAULT_BRANCH:?}"|jq -r .object.sha)"
          gh api --method POST "/repos/$GITHUB_REPOSITORY/git/refs" -f ref="refs/heads/${branch:?}" -f sha="${sha:?}"
          gh api --method PUT "/repos/$GITHUB_REPOSITORY/contents/config.json" \
              --field branch="$branch" \
              --field content="$(base64 -w0 <config.json)" \
              --field encoding="base64" \
              --field message="Ignore $advisory_id" \
              --field sha="$(git rev-parse --verify "$DEFAULT_BRANCH:config.json")"
          gh pr create -B "$DEFAULT_BRANCH" -H "$branch" -t "Ignore $advisory_id" -b "Resolves ${issue_url:?}"

